
Try to stick to fsck(8) expectations:

          0 - No errors.
          1 - File system errors corrected.
          2 - Reboot is needed.
          4 - File system fatal errors left uncorrected.
          8 - Operational error.
          16 - Usage or syntax error.

--- a/sbin/fsck_ffs/fsck.h
+++ b/sbin/fsck_ffs/fsck.h
@@ -360,7 +360,7 @@ extern struct	ufs2_dinode ufs2_zino;
 #define	ALTERED	0x08
 #define	FOUND	0x10
 
-#define	EEXIT	8		/* Standard error exit. */
+#define	EEXIT	4		/* Standard error exit. */
 #define	ERESTART -1
 
 int flushentry(void);
--- a/sbin/fsck_ffs/main.c
+++ b/sbin/fsck_ffs/main.c
@@ -264,7 +264,7 @@ checkfilesys(char *filesys)
 	sblock_init();
 	if (bkgrdcheck) {
 		if ((fsreadfd = open(filesys, O_RDONLY)) < 0 || readsb(0) == 0)
-			exit(3);	/* Cannot read superblock */
+			exit(8);	/* Cannot read superblock */
 		close(fsreadfd);
 		/* Earlier background failed or journaled */
 		if (sblock.fs_flags & (FS_NEEDSFSCK | FS_SUJ))
@@ -284,7 +284,7 @@ checkfilesys(char *filesys)
 		 * If file system is gjournaled, check it here.
 		 */
 		if ((fsreadfd = open(filesys, O_RDONLY)) < 0 || readsb(0) == 0)
-			exit(3);	/* Cannot read superblock */
+			exit(8);	/* Cannot read superblock */
 		close(fsreadfd);
 		if ((sblock.fs_flags & FS_GJOURNAL) != 0) {
 			//printf("GJournaled file system detected on %s.\n",
@@ -417,8 +417,8 @@ checkfilesys(char *filesys)
 				if (suj_check(filesys) == 0) {
 					printf("\n***** FILE SYSTEM MARKED CLEAN *****\n");
 					if (chkdoreload(mntp) == 0)
-						exit(0);
-					exit(4);
+						exit(1);
+					exit(1);
 				}
 			}
 			printf("** Skipping journal, falling through to full fsck\n\n");
@@ -669,7 +669,7 @@ usage(void)
 	(void) fprintf(stderr,
 "usage: %s [-BEFfnpry] [-b block] [-c level] [-m mode] filesystem ...\n",
 	    getprogname());
-	exit(1);
+	exit(16);
 }
 
 void
